from sys import stdin as s
import heapq

s = open("input.txt", "rt")

""" 
문제

절댓값 힙은 다음과 같은 연산을 지원하는 자료구조이다.
배열에 정수 x (x ≠ 0)를 넣는다.
배열에서 절댓값이 가장 작은 값을 출력하고, 그 값을 배열에서 제거한다. 
절댓값이 가장 작은 값이 여러개일 때는, 가장 작은 수를 출력하고, 그 값을 배열에서 제거한다.
프로그램은 처음에 비어있는 배열에서 시작하게 된다.

첫째 줄에 연산의 개수 N(1≤N≤100,000)이 주어진다. 
다음 N개의 줄에는 연산에 대한 정보를 나타내는 정수 x가 주어진다. 
만약 x가 0이 아니라면 배열에 x라는 값을 넣는(추가하는) 연산이고, 
x가 0이라면 배열에서 절댓값이 가장 작은 값을 출력하고 그 값을 배열에서 제거하는 경우이다. 
입력되는 정수는 -231보다 크고, 231보다 작다.

입력에서 0이 주어진 회수만큼 답을 출력한다. 
만약 배열이 비어 있는 경우인데 절댓값이 가장 작은 값을 출력하라고 한 경우에는 0을 출력하면 된다.
"""
n = int(s.readline().rstrip())
datas = [int(s.readline()) for _ in range(n)]
myHeap = []

for i in range(n):
    if datas[i] != 0:
        #1. 리스트의 가장 앞 항목과 abs(m)를 우선 비교하여 정렬된다.
        #2. 같은 인덱스 0의 abs(m) 값들에 있어서는 m의 값을 기준으로 정렬된다.
        #   전체 항목을 다 비교하지 않고 가장 앞의 항목과의 비교만 하여 정렬하기 때문에 최솟값, 최댓값 찾는데 이용!
        heapq.heappush(myHeap, (abs(datas[i]), datas[i]))
    else: 
        if myHeap:
            print(heapq.heappop(myHeap)[1])
        else: 
            print(0)
from sys import stdin as s

s = open("input.txt", "rt")
""" 
문제

우리나라 화폐단위, 특히 동전에는 1원, 5원, 10원, 50원, 100원, 500원이 있다. 
이 동전들로는 정수의 금액을 만들 수 있으며 그 방법도 여러 가지가 있을 수 있다. 
예를 들어, 30원을 만들기 위해서는 1원짜리 30개 또는 10원짜리 2개와 5원짜리 2개 등의 방법이 가능하다.

동전의 종류가 주어질 때에 주어진 금액을 만드는 모든 방법을 세는 프로그램을 작성하시오.

입력의 첫 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 10)가 주어진다. 
각 테스트 케이스의 첫 번째 줄에는 동전의 가지 수 N(1 ≤ N ≤ 20)이 주어지고 
두 번째 줄에는 N가지 동전의 각 금액이 오름차순으로 정렬되어 주어진다. 
각 금액은 정수로서 1원부터 10000원까지 있을 수 있으며 공백으로 구분된다. 
세 번째 줄에는 주어진 N가지 동전으로 만들어야 할 금액 M(1 ≤ M ≤ 10000)이 주어진다.

편의를 위해 방법의 수는 231 - 1 보다 작고, 같은 동전이 여러 번 주어지는 경우는 없다.

각 테스트 케이스에 대해 입력으로 주어지는 N가지 동전으로 금액 M을 만드는 모든 방법의 수를 한 줄에 하나씩 출력한다.
"""



if __name__ == "__main__":
    t = int(s.readline().rstrip())

    for i in range(t):
        n = int(s.readline().rstrip())
        coins = list(map(int, s.readline().rstrip().split()))
        coins.insert(0, 0)
        m = int(s.readline().rstrip())

        # dp테이블은 m까지의 금액을 만드는 방법의 가지 수를 저장한다.
        # coins의 각각의 원소로 m원을 만드는 방법의 가지 수 저장
        dp = [[0] * (m+1) for i in range(n + 1)]

        for i in range(n + 1):
            # 모든 동전으로 0원을 만드는 가짓 수는 1가지이다.
            dp[i][0] = 1
        
        for i in range(1, n + 1):
            for j in range(1, m+1):
                # 이전 동전으로 m원을 만들 수 있는 가짓수를 우선 가져온다.
                dp[i][j] = dp[i-1][j]

                # 만들고자 하는 금액에서 현재 동전 금액을 뺀다.
                if j - coins[i] >= 0:
                    # 뺀 금액을 구하는 방법의 가짓수가 현재 m원을 만드는 가지수이다.
                    dp[i][j] += dp[i][j-coins[i]]
                    
        print(dp[n][m])
